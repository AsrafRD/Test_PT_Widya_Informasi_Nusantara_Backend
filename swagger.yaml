openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
paths:
  /auth/register:
    post:
      summary: Register User
      description: Mendaftarkan pengguna baru dengan isian data nama, email, password, dan gender. Email harus diisi dengan format yang valid (misalnya: example@example.com).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                gender:
                  type: string
      responses:
        '201':
          description: User created successfully
        '400':
          description: Pengguna sudah ada atau ada masalah dengan permintaan.

  /auth/login:
    post:
      summary: Login User
      description: Masuk ke akun pengguna yang sudah terdaftar dengan menyediakan email dan password. Untuk melanjutkan aktivitas selanjutnya silahkan masukan token JWT yang didapat setelah login tadi di bagian response, klik icon gembok di sebelah kanan anda dan masukkan token lalu authorized.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Berhasil masuk.
        '400':
          description: Akun tidak ditemukan atau ada masalah dengan permintaan.
          
  /auth/profile:
    get:
      summary: Get User Profile
      description: Mendapatkan profil pengguna yang sudah masuk. Permintaan harus diotorisasi dengan token akses JWT.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Respon berhasil dengan profil pengguna.
        '401':
          description: Tidak diotorisasi.

  /auth/delete-all-users:
    delete:
      summary: Delete All Users
      description: Menghapus semua pengguna dari sistem.
      responses:
        '200':
          description: Semua pengguna berhasil dihapus.
        '500':
          description: Gagal menghapus semua pengguna.

  /products:
    post:
      summary: Create Product
      description: Membuat produk baru. Permintaan harus diotorisasi dengan token akses JWT.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
      responses:
        '201':
          description: Produk berhasil dibuat.
        '400':
          description: Gagal membuat produk.

    get:
      summary: Get All Products
      description: Mendapatkan daftar produk yang sudah ada. Permintaan harus diotorisasi dengan token akses JWT.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Respon berhasil dengan daftar produk.
        '500':
          description: Server error.

  /products/{id}:
    get:
      summary: Get Product by ID
      description: Mendapatkan detail produk berdasarkan ID. Permintaan harus diotorisasi dengan token akses JWT.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Respon berhasil dengan detail produk.
        '404':
          description: Produk tidak ditemukan.
        '500':
          description: Server error.

    put:
      summary: Update Product by ID
      description: Memperbarui detail produk berdasarkan ID. Permintaan harus diotorisasi dengan token akses JWT.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
      responses:
        '200':
          description: Produk berhasil diperbarui.
        '400':
          description: Gagal memperbarui produk.
        '404':
          description: Produk tidak ditemukan.

    delete:
      summary: Delete Product by ID
      description: Menghapus produk berdasarkan ID. Permintaan harus diotorisasi dengan token akses JWT.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Produk berhasil dihapus.
        '400':
          description: Gagal menghapus produk.
        '404':
          description: Produk tidak ditemukan.

  /products/delete-all:
    delete:
      summary: Delete All Products
      description: Menghapus semua produk dari sistem.
      responses:
        '200':
          description: Semua produk berhasil dihapus.
        '500':
          description: Gagal menghapus semua produk.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
